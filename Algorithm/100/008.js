/*
题目：输入两个正整数m和n，求其最大公约数和最小公倍数。

程序分析：

（1）最小公倍数=输入的两个数之积除于它们的最大公约数，关键是求出最大公约数；

（2）求最大公约数用辗转相除法（又名欧几里德算法）

1、最大公约数质因数分解法
把每个数分别分解质因数，再把各数中的全部公有质因数提取出来连乘，所得的积就是这几个数的最大公约数。
例如：求24和60的最大公约数，先分解质因数，得24=2×2×2×3，60=2×2×3×5，24与60的全部公有的质因数是2、2、3，它们的积是2×2×3=12，所以，（24，60）=12。

2、最大公约数欧几里德算法
辗转相除法 m / n
*/

function gcd(m, n){
  let t
  if(m < n){
    t = m
    m = n
    n = t
  }
  let a = m*n
  // 欧几里德算法
  let r = m%n
  while(r != 0){
    m = n
    n = r
    r = m%n;
  }
  
  console.log('最大公约数：', n)
  console.log('最小公倍数：', a/n)
}
gcd(377,319)